'use strict';
const cssStatic = require('../');
const gulp = require('gulp');
const fs = require('fs');
const del = require('del');
const assert = require('power-assert');

function getFileContent(distPath) {
    return fs.readFileSync(distPath).toString();
}

describe('Map File', function() {
    after(function(done) {
        del(['./test/dist'])
            .then(function() {
                done();
            })
            .catch(done);
    });
    describe('Build', function() {
        it('Build gulp task', function(done) {
            gulp.src('./test/build/**/*')
                .pipe(cssStatic())
                .pipe(gulp.dest('./test/dist/empty-config/'))
                .on('finish', function() {
                    done();
                });
        });
        it('Build gulp task with domain', function(done) {
            gulp.src('./test/build/**/*')
                .pipe(cssStatic({
                    domain: 'http://as.zbjimg.com/static'
                }))
                .pipe(gulp.dest('./test/dist/domain-config/'))
                .on('finish', function() {
                    done();
                });
        });
    });
    describe('Confirm File', function() {
        it('Confirm css files', function() {
            assert(getFileContent('./test/dist/domain-config/css/test.css') === getFileContent('./test/valid/domain-config-test.css'));
            assert(getFileContent('./test/dist/empty-config/css/test.css') === getFileContent('./test/valid/empty-config-test.css'));
            assert(getFileContent('./test/dist/domain-config/css/compress.css') === getFileContent('./test/valid/domain-config-compress.css'));
            assert(getFileContent('./test/dist/empty-config/css/compress.css') === getFileContent('./test/valid/empty-config-compress.css'));
            assert(getFileContent('./test/dist/domain-config/empty.css') === getFileContent('./test/valid/empty.css'));
            assert(getFileContent('./test/dist/empty-config/empty.css') === getFileContent('./test/valid/empty.css'));
        });
    });
});