'use strict';
const path = require('path');
const fs = require('fs');
const normalize = require('normalize-path');
const prettier = require('prettier');

const REQUIRE_REG = /require\([\"\'](\S+)[\"\']+\)/g;
const REQUIRE_REPLACE_REG = /^require\([\"\'](\S+)[\"\']+\)$/;
const MODULE_TEST_REG = /module\.exports/;
const EXPORTS_TEST_REG = /exports\./;
/**
 * 获取依赖列表
 * @param  {String} content 源内容
 * @param  {Object} config  配置
 * @return {Object}         依赖列表
 */
exports.getRequireList = function(content, config) {
    const matchList = content.match(REQUIRE_REG);
    const TPL_REG = new RegExp(`\.${config.tplSuffix}$`);
    let scripts = [];
    let templates = [];
    if(matchList) {
        matchList.forEach(function(matchItem) {
            const item = matchItem.replace(REQUIRE_REPLACE_REG, '$1');
            if(TPL_REG.test(item)) {
                templates.push(item);
            }else {
                scripts.push(item);
            }
        });
    }
    return {
        scripts: scripts,
        templates: templates
    };
};

/**
 * 替换模板文件
 * @param  {Object} file    文件对象
 * @param  {String} tplPath 模板路径
 * @param  {String} content 内容串
 * @return {String}         替换后的内容串
 */
exports.replaceTpl = function(file, tplPath, content) {
    const pathInfo = path.parse(file.path);
    const tplRequirePath = path.join(pathInfo.dir, tplPath);
    const tplCon = fs.readFileSync(tplRequirePath).toString().replace(/\'/g, '\\\'').replace(/[\n\r]/g, '');
    const newCon = content.replace(new RegExp('require\\([\"\\\']' + tplPath + '[\\"\\\']+\\)'), '\'' + tplCon + '\'');
    return newCon;
};

/**
 * 插入sea框架
 * @param  {Object} file        文件对象
 * @param  {String} content     内容串
 * @param  {Array}  requireList 内容串
 * @param  {Object} config      配置对象
 * @return {String}             替换后的内容串
 */
exports.insertSeaWrapper = function(file, content, requireList, config) {
    const filepath = normalize(file.relative).replace(/^([^\/])/, '/$1'); //替换非/开头的为/
    const nameKey = (config.namespace ? (config.namespace + ':') : '') + filepath;
    let funcArg = '';
    if(MODULE_TEST_REG.test(content)) { //当有module.exports输出时
        funcArg = 'require, exports, module';
    }
    else if(EXPORTS_TEST_REG.test(content)) { //当有exports输出时
        funcArg = 'require, exports';
    }
    else if(requireList.scripts.length > 0) {
        funcArg = 'require';
    }
    // 生成seajs的内容
    const newCon = `'use strict';\ndefine('${nameKey}', ${JSON.stringify(requireList.scripts).replace(/\"/g, '\'').replace(/\,/g, ', ')}, function(${funcArg}) {\n${content}\n});`;
    return prettier.format(newCon, {
        tabWidth: 4,
        singleQuote: true
    });
};