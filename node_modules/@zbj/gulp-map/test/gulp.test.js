'use strict';
const GulpMap = require('../');
const gulp = require('gulp');
const less = require('gulp-less');
const hash = require('gulp-hash');
const RevAll = require('gulp-rev-all');
const assert = require('power-assert');
const del = require('del');
const fs = require('fs-extra');
const map = new GulpMap({
    uri: 'http://localhost',
    namespace: 'test'
});

const localMap = new GulpMap();

const hashMap = new GulpMap();

const revMap = new GulpMap();

describe('Map File', function() {
    after(function(done) {
        del(['./test/dist', './test/build/css/style.css'])
        .then(function() {
            done();
        })
        .catch(done);
    });
    it('Build less gulp task', function(done) {
        gulp.src('./test/build/**/*.less')
        .pipe(map.savePath({
            replace: 'less',
            to: 'css'
        }))
        .pipe(less())
        .pipe(gulp.dest('./test/build/'))
        .on('finish', function() {
            const mapObj = map.getMap();
            assert(mapObj['test:/css/style.less'].source === 'test:/css/style.css');
            done();
        });
    });
    it('Build gulp task', function(done) {
        gulp.src('./test/build/**/*.{css,html,js,png,gif,jpg}')
        .pipe(map.savePath())
        .pipe(gulp.dest('./test/dist/'))
        .on('finish', function() {
            map.buildMap('./test/dist/');
            done();
        });
    });
    it('Comfirm map result', function() {
        const map = fs.readJsonSync('./test/dist/map.json');
        assert(Object.keys(map).length === 7);
        assert.deepEqual(map['test:/css/style.less'], {
            'source': 'test:/css/style.css',
            'type': 'less'
        });
        assert.deepEqual(map['test:/index.html'], {
            'uri': 'http://localhost/index.html',
            'type': 'html'
        });
        assert.deepEqual(map['test:/css/main.css'], {
            'uri': 'http://localhost/css/main.css',
            'type': 'css'
        });
        assert.deepEqual(map['test:/css/style.css'], {
            'uri': 'http://localhost/css/style.css',
            'type': 'css'
        });
        assert.deepEqual(map['test:/img/logo.png'], {
            'uri': 'http://localhost/img/logo.png',
            'type': 'png'
        });
        assert.deepEqual(map['test:/js/app.js'], {
            'uri': 'http://localhost/js/app.js',
            'type': 'js'
        });
        assert.deepEqual(map['test:/js/test.js'], {
            'uri': 'http://localhost/js/test.js',
            'type': 'js'
        });
    });
});

describe('Map File with another config', function() {
    after(function(done) {
        del(['./test/dist', './test/build/css/style.css'])
        .then(function() {
            done();
        })
        .catch(done);
    });
    it('Build less gulp task', function(done) {
        gulp.src('./test/build/**/*.less')
        .pipe(localMap.savePath({
            replace: 'less',
            to: 'css'
        }))
        .pipe(less())
        .pipe(gulp.dest('./test/build/'))
        .on('finish', function() {
            const mapObj = localMap.getMap();
            assert(mapObj['/css/style.less'].source === '/css/style.css');
            done();
        });
    });
    it('Build gulp task', function(done) {
        gulp.src('./test/build/**/*.{css,html,js,png,gif,jpg}')
        .pipe(localMap.savePath())
        .pipe(gulp.dest('./test/dist/'))
        .on('finish', function() {
            localMap.buildMap('./test/dist/');
            done();
        });
    });
    it('Comfirm map result', function() {
        const map = fs.readJsonSync('./test/dist/map.json');
        assert(Object.keys(map).length === 7);
        assert.deepEqual(map['/css/style.less'], {
            'source': '/css/style.css',
            'type': 'less'
        });
        assert.deepEqual(map['/index.html'], {
            'uri': '/index.html',
            'type': 'html'
        });
        assert.deepEqual(map['/css/main.css'], {
            'uri': '/css/main.css',
            'type': 'css'
        });
        assert.deepEqual(map['/css/style.css'], {
            'uri': '/css/style.css',
            'type': 'css'
        });
        assert.deepEqual(map['/img/logo.png'], {
            'uri': '/img/logo.png',
            'type': 'png'
        });
        assert.deepEqual(map['/js/app.js'], {
            'uri': '/js/app.js',
            'type': 'js'
        });
        assert.deepEqual(map['/js/test.js'], {
            'uri': '/js/test.js',
            'type': 'js'
        });
    });
});

describe('Map File with hash config', function() {
    after(function(done) {
        del(['./test/dist', './test/build/css/style.css'])
        .then(function() {
            done();
        })
        .catch(done);
    });
    it('Build less gulp task', function(done) {
        gulp.src('./test/build/**/*.less')
        .pipe(hashMap.savePath({
            replace: 'less',
            to: 'css'
        }))
        .pipe(less())
        .pipe(gulp.dest('./test/build/'))
        .on('finish', function() {
            const mapObj = hashMap.getMap();
            assert(mapObj['/css/style.less'].source === '/css/style.css');
            done();
        });
    });
    it('Build gulp task', function(done) {
        gulp.src('./test/build/**/*.{css,html,js,png,gif,jpg}')
        .pipe(hash())
        .pipe(hashMap.savePath({
            hash: true
        }))
        .pipe(gulp.dest('./test/dist/'))
        .on('finish', function() {
            hashMap.buildMap('./test/dist/');
            done();
        });
    });
    it('Comfirm map result', function() {
        const map = fs.readJsonSync('./test/dist/map.json');
        assert(Object.keys(map).length === 7);
        assert.deepEqual(map['/css/style.less'], {
            'source': '/css/style.css',
            'type': 'less'
        });
        assert.deepEqual(map['/index.html'], {
            'uri': '/index-c34a77aa.html',
            'type': 'html'
        });
        assert.deepEqual(map['/css/main.css'], {
            'uri': '/css/main-b5df80af.css',
            'type': 'css'
        });
        assert.deepEqual(map['/css/style.css'], {
            'uri': '/css/style-56c48b47.css',
            'type': 'css'
        });
        assert.deepEqual(map['/img/logo.png'], {
            'uri': '/img/logo-fa1108dc.png',
            'type': 'png'
        });
        assert.deepEqual(map['/js/app.js'], {
            'uri': '/js/app-31aa39c8.js',
            'type': 'js'
        });
        assert.deepEqual(map['/js/test.js'], {
            'uri': '/js/test-84dae822.js',
            'type': 'js'
        });
    });
});

describe('Map File with rev hash config', function() {
    after(function(done) {
        del(['./test/dist', './test/build/css/style.css'])
        .then(function() {
            done();
        })
        .catch(done);
    });
    it('Build less gulp task', function(done) {
        gulp.src('./test/build/**/*.less')
        .pipe(revMap.savePath({
            replace: 'less',
            to: 'css'
        }))
        .pipe(less())
        .pipe(gulp.dest('./test/build/'))
        .on('finish', function() {
            const mapObj = revMap.getMap();
            assert(mapObj['/css/style.less'].source === '/css/style.css');
            done();
        });
    });
    it('Build gulp task', function(done) {
        gulp.src('./test/build/**/*.{css,html,js,png,gif,jpg}')
        .pipe(RevAll.revision())
        .pipe(revMap.savePath({
            hash: true
        }))
        .pipe(gulp.dest('./test/dist/'))
        .on('finish', function() {
            revMap.buildMap('./test/dist/');
            done();
        });
    });
    it('Comfirm map result', function() {
        const map = fs.readJsonSync('./test/dist/map.json');
        assert(Object.keys(map).length === 7);
        assert.deepEqual(map['/css/style.less'], {
            'source': '/css/style.css',
            'type': 'less'
        });
        // assert.deepEqual(map['/index.html'], {
        //     'uri': '/index.a466ab0a.html',
        //     'type': 'html'
        // });
        assert.deepEqual(map['/css/main.css'], {
            'uri': '/css/main.03f76e1c.css',
            'type': 'css'
        });
        assert.deepEqual(map['/css/style.css'], {
            'uri': '/css/style.1587e26a.css',
            'type': 'css'
        });
        assert.deepEqual(map['/img/logo.png'], {
            'uri': '/img/logo.cfd570e1.png',
            'type': 'png'
        });
        assert.deepEqual(map['/js/app.js'], {
            'uri': '/js/app.3effe6a4.js',
            'type': 'js'
        });
        assert.deepEqual(map['/js/test.js'], {
            'uri': '/js/test.65540d69.js',
            'type': 'js'
        });
    });
});